const info = [
  {
    title: "Array Function",
    function: "-.chunk(array, [size=1])",
    title1: "Description",
    desc: `creates an array of elements split into groups the length of size. If array can't be split evenly, the final chunk will be the remaining elements.`,
    title2: "Argument",
    argument: `<strong>array (Array):</strong> The array to process. <br>
   <strong> [size=1] (number):</strong> The length of each chunk`,
    title3: "Returns",
    return: "<strong>(Array):</strong> Returns the new array of chunks.",
    title4: "Exemple",
    exemple: "./photo/Capture d’écran 2022-08-14 131332.png",
    id: "chunk",
  },
  {
    function: "_.compact(array)",
    title1: "Description",
    desc: `creates an array of elements split into groups the length of size. If array can't be split evenly, the final chunk will be the remaining elements.`,
    title2: "Argument",
    argument: `<strong>array (Array):</strong> The array to process. <br>
   <strong> [size=1] (number):</strong> The length of each chunk`,
    title3: "Returns",
    return: "<strong>(Array):</strong> Returns the new array of chunks.",
    title4: "Exemple",
    exemple: "./photo/Capture d’écran 2022-08-14 131332.png",
    id: "compact",
  },
  {
    function: "-.bibi",
    title1: "Description",
    desc: `creates an array of elements split into groups the length of size. If array can't be split evenly, the final chunk will be the remaining elements.`,
    title2: "Argument",
    argument: `<strong>array (Array):</strong> The array to process. <br>
   <strong> [size=1] (number):</strong> The length of each chunk`,
    title3: "Returns",
    return: "<strong>(Array):</strong> Returns the new array of chunks.",
    title4: "Exemple",
    exemple: "./photo/Capture d’écran 2022-08-14 131332.png",
    id: "bibi",
  },
  {
    function: "-.chunk(array, [size=1])",
    title1: "Description",
    desc: "zzzz",
    title2: "Argument",
    argument: `<strong>array (Array):</strong> The array to process. <br>
   <strong> [size=1] (number):</strong> The length of each chunk`,
    title3: "Returns",
    return: "<strong>(Array):</strong> Returns the new array of chunks.",
    title4: "Exemple",
    exemple: "./photo/Capture d’écran 2022-08-14 131332.png",
    id: "zz",
  },
  {
    function: "-.bibi",
    title1: "Description",
    desc: `creates an array of elements split into groups the length of size. If array can't be split evenly, the final chunk will be the remaining elements.`,
    title2: "Argument",
    argument: `<strong>array (Array):</strong> The array to process. <br>
   <strong> [size=1] (number):</strong> The length of each chunk`,
    title3: "Returns",
    return: "<strong>(Array):</strong> Returns the new array of chunks.",
    title4: "Exemple",
    exemple: "./photo/Capture d’écran 2022-08-14 131332.png",
    id: "bibi",
  },
  {
    function: "fefefefe",
    id: "fefe",
  },
];

const array = [
  { link: "#chunk", value: "_.chunk" },
  { link: "#compact", value: "_.compact" },
  { link: "#concat", value: "_.concat" },
  { link: "#difference", value: "_.difference" },
  { link: "#bilan", value: "_.bilan" },
  { link: "#fefe", value: "_.fefe" },
];

const collections = [
  { link: "#bibi", value: "_.bibi" },
  { link: "#cc", value: "_.dd" },
  { link: "#zz", value: "_.zz" },
  { link: "#tt", value: "_.tt" },
  { link: "#bibi", value: "_.bibi" },
  { link: "#cc", value: "_.dd" },
  { link: "#zz", value: "_.zz" },
  { link: "#tt", value: "_.tt" },
  { link: "#bibi", value: "_.bibi" },
  { link: "#cc", value: "_.dd" },
  { link: "#zz", value: "_.zz" },
  { link: "#tt", value: "_.tt" },
  { link: "#bibi", value: "_.bibi" },
  { link: "#cc", value: "_.dd" },
  { link: "#zz", value: "_.zz" },
  { link: "#tt", value: "_.tt" },
];
